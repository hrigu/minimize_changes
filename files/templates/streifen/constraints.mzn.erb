%%%%%%%%%%%%%
% CONSTRAINTS
%%%%%%%%%%%%%

% Alle Produkte verarbeiten
%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Pro Produkt und Timeslot muss die Anzahl des Produktes auf allen Maschinen zusammengezaehlt den Bedarf ergeben
constraint forall(p in PRODUKTE, t in TIME_SLOTS where bedarf[p,t] == true) (
    exists(m in MASCHINEN) (plan[m,t] == p)
);
% Es muss in einem Timeslot aber immer noch anzahl_luecken_pro_timeslot vorhanden sind.
constraint forall(t in TIME_SLOTS ) (
    sum(m in MASCHINEN) (bool2int(plan[m,t] == 0)) == anzahl_luecken_pro_timeslot[t]
);



%Streifen m√ºssen als ganzes auf irgend einer Maschine liegen. Ein Streifen ist Beispielsweise {produkt: 1, start_index: 5, end_index: 8}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Anzahl Streifen welche nicht unversehrt auf einer Maschine auftauchen, minimieren
%%%
constraint end_anzahl_streifen_nicht_verteilt ==  <%= @problem.constraint_streifen_nicht_verteilt %>

%%%%%%%%%%%%%%%%%
% END CONSTRAINTS
%%%%%%%%%%%%%%%%%
